import React, { useEffect, useState } from 'react'
import { useNavigate } from 'react-router-dom'
import axios from 'axios'

const AllRepairsAdmin = () => {
  const [repairs, setRepairs] = useState([])
  const [employees, setEmployees] = useState([])
  const [selectedEmp, setSelectedEmp] = useState({})
  const navigate = useNavigate()

  useEffect(() => {
    axios.get('http://localhost:5000/api/repair/all')
      .then(res => setRepairs(res.data))
      .catch(err => console.error('‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err))

    axios.get('http://localhost:5000/api/employee')
      .then(res => setEmployees(res.data))
      .catch(err => console.error('‡πÇ‡∏´‡∏•‡∏î‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err))
  }, [])

  const updateStatus = async (requestId, type) => {
    try {
      if (type === 'accept') {
        const employeeId = selectedEmp[requestId]
        if (!employeeId) return alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á')
        await axios.put(`http://localhost:5000/api/repair/accept/${requestId}`, { employeeId })
        alert('‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
        window.location.reload()
      }
    } catch (err) {
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + err.message)
    }
  }

  const completedRepairs = repairs.filter(r => r.Status === 'completed')
  const inProgressRepairs = repairs.filter(r => r.Status !== 'completed')

  const RepairTable = ({ title, data }) => (
    <div className="mt-10">
      <h3 className="text-xl font-semibold mb-2">{title}</h3>
      {data.length === 0 ? (
        <p className="text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>
      ) : (
        <table className="w-full table-auto border text-sm mb-6">
          <thead className="bg-gray-100">
            <tr>
              <th className="border px-2 py-1">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤</th>
              <th className="border px-2 py-1">‡∏´‡πâ‡∏≠‡∏á</th>
              <th className="border px-2 py-1">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á</th>
              <th className="border px-2 py-1">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
              <th className="border px-2 py-1">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
              <th className="border px-2 py-1">‡∏ä‡πà‡∏≤‡∏á</th>
              <th className="border px-2 py-1">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏°</th>
              <th className="border px-2 py-1">‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
            </tr>
          </thead>
          <tbody>
            {data.map((r, index) => (
              <tr key={index}>
                <td className="border px-2 py-1">{r.firstname} {r.lastname}</td>
                <td className="border px-2 py-1">{r.Room_ID}</td>
                <td className="border px-2 py-1">{r.Request_date?.split('T')[0]}</td>
                <td className="border px-2 py-1">{r.Description}</td>
                <td className="border px-2 py-1">{r.Status}</td>
                <td className="border px-2 py-1">{r.technician || '-'}</td>
                <td className="border px-2 py-1">{r.maintenance_date?.split('T')[0] || '-'}</td>
                <td className="border px-2 py-1">
                  {r.Status === 'pending' && (
                    <div className="flex gap-2 items-center">
                      <select
                        className="border p-1"
                        value={selectedEmp[r.Request_ID] || ''}
                        onChange={(e) =>
                          setSelectedEmp({ ...selectedEmp, [r.Request_ID]: e.target.value })
                        }
                      >
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≤‡∏á</option>
                        {employees.map(emp => (
                          <option key={emp.Employee_ID} value={emp.Employee_ID}>
                            {emp.firstname} {emp.lastname}
                          </option>
                        ))}
                      </select>
                      <button
                        className="bg-yellow-500 text-white px-2 py-1 rounded"
                        onClick={() => updateStatus(r.Request_ID, 'accept')}
                      >
                        ‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á
                      </button>
                    </div>
                  )}

                  {r.Status === 'in_progress' && (
                    <button
                      className="bg-green-600 text-white px-2 py-1 rounded"
                      onClick={() => navigate(`/admin/repairs/complete/${r.Request_ID}`)}
                    >
                      ‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
                    </button>
                  )}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  )

  return (
    <div className="max-w-7xl mx-auto p-6 bg-white rounded shadow">
      <h2 className="text-2xl font-bold mb-4">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h2>
      <RepairTable title="üìå ‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à" data={inProgressRepairs} />
      <RepairTable title="‚úÖ ‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß" data={completedRepairs} />
    </div>
  )
}

export default AllRepairsAdmin
